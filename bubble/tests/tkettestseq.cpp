// clang-format off
/**
 * Running order of tests defined by the order of inclusion here.
 * 
 * Whilst Catch2 can handle tests distributed across multiple cpp files,
 * the order in which the tests run are (linker) implementation dependent.
 * Whilst tests should be independent of the order, it is practical to fix an
 * order with simple tests first to help analyse where bugs are coming from.
 * Compiling all tests in a single file achieves this.
 */
#include "Utils/test_MatrixAnalysis.cpp"
#include "Utils/test_CosSinDecomposition.cpp"
#include "Graphs/test_GraphColouring.cpp"
#include "Graphs/test_GraphFindComponents.cpp"
#include "Graphs/test_GraphFindMaxClique.cpp"
#include "Graphs/test_RNG.cpp"
#include "Graphs/test_GraphUtils.cpp"
#include "Graphs/test_UIDConnectivity.cpp"
#include "Graphs/test_ArticulationPoints.cpp"
#include "Graphs/test_TreeSearch.cpp"
#include "test_PauliString.cpp"
#include "Ops/test_ClassicalOps.cpp"
#include "Ops/test_Expression.cpp"
#include "Ops/test_Ops.cpp"
#include "Gate/test_GateUnitaryMatrix.cpp"
#include "Simulation/test_CircuitSimulator.cpp"
#include "Simulation/test_PauliExpBoxUnitaryCalculator.cpp"
#include "test_Utils.cpp"
#include "Circuit/test_Boxes.cpp"
#include "Circuit/test_Circ.cpp"
#include "Circuit/test_Symbolic.cpp"
#include "Circuit/test_ThreeQubitConversion.cpp"
#include "test_Program.cpp"
#include "test_CliffTableau.cpp"
#include "test_PhasePolynomials.cpp"
#include "test_PauliGraph.cpp"
#include "test_Architectures.cpp"
#include "test_Placement.cpp"
#include "test_Routing.cpp"
#include "test_DeviceCharacterisation.cpp"
#include "test_Clifford.cpp"
#include "test_MeasurementSetup.cpp"
#include "test_Partition.cpp"
#include "test_MeasurementReduction.cpp"
#include "test_PhaseGadget.cpp"
#include "test_Rebase.cpp"
#include "test_Synthesis.cpp"
#include "test_TwoQubitCanonical.cpp"
#include "test_ControlDecomp.cpp"
#include "test_Combinators.cpp"
#include "test_Predicates.cpp"
#include "test_CompilerPass.cpp"
#include "test_ContextOpt.cpp"
#include "test_FrameRandomisation.cpp"
#include "test_Assertion.cpp"
#include "test_json.cpp"
#include "test_Path.cpp"
#include "test_SteinerTree.cpp"
#include "test_SteinerForest.cpp"
// clang-format on
